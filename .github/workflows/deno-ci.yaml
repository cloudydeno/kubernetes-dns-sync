name: CI

on:
  push:
    branches: [ denodir-oci ]
    tags: [ v* ]
    paths-ignore:
      - 'helm-chart/**'
      - 'manifests/**'
      - 'configs/**'
      - '*.md'
  pull_request: {}

jobs:

  check:
    runs-on: ubuntu-latest
    name: Check w/ ${{ matrix.deno-version }}
    strategy:
      matrix:
        deno-version:
        # v1.17 and earlier lack Intl.ListFormat type
        - v1.18
        - canary
      fail-fast: false # run each branch to completion

    steps:
    - name: Checkout source
      uses: actions/checkout@v2

    - name: Use Deno ${{ matrix.deno-version }}
      uses: denoland/setup-deno@v1
      with:
        deno-version: ${{ matrix.deno-version }}

    # "https" cache: code from the Internet
    # External sources won't change much so we use less precise keys
    - name: Cache https://
      uses: actions/cache@v2
      with:
        path: ~/.cache/deno/deps/https
        key: deno-https/v1-${{ github.sha }}
        restore-keys: deno-https/v1-

    - name: Check src/main.ts
      if: always()
      run: time deno cache src/main.ts

    - name: Run test suite
      if: always()
      run: time deno test

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    needs: check
    runs-on: ubuntu-latest
    name: 'Push container image'
    if: github.event_name == 'push'

    steps:
      - name: Use Deno stable
        uses: denoland/setup-deno@v1
      - name: Cache https://
        uses: actions/cache@v2
        with:
          path: ~/.cache/deno/deps/https
          key: deno-https/v1-${{ github.sha }}-doci
          restore-keys: deno-https/v1-
      - name: Install denodir-oci utility
        run: deno install --allow-{read,write}=$HOME,${TMPDIR:-/tmp} --allow-run --allow-net --allow-env --reload=https://raw.githubusercontent.com https://raw.githubusercontent.com/cloudydeno/denodir-oci/main/doci/mod.ts

      - name: Determine image name
        id: name
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          if [[ "${{ github.ref }}" == "refs/tags/"* ]]
          then VERSION=$(echo $VERSION | sed -e 's/^v//')
          else VERSION=${{ github.sha }}
          fi
          echo "Will push to $IMAGE_ID:$VERSION"
          echo "::set-output name=image::$IMAGE_ID:$VERSION"

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: x-access-token
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v2

      - run: doci cache src/deps.ts
      - run: doci build src/main.ts --unstable --permissions-flags "--allow-hrtime --allow-net --allow-read --allow-env"
      - run: doci push ${{ steps.name.outputs.image }}-denodir
      - run: doci eject --push ${{ steps.name.outputs.image }}-alpine --base denoland/deno:alpine-1.18.2
      - run: doci eject --push ${{ steps.name.outputs.image }}-multiarch --base lukechannings/deno:v1.18.2
