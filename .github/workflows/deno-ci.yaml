name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main, test ]
    tags: [ v* ]
    paths-ignore:
      - 'manifests/**'
      - 'configs/**'
      - '*.md'
  pull_request: {}

permissions:
  contents: read

jobs:

  check:
    runs-on: ubuntu-latest
    name: Check

    steps:
    - name: Checkout source
      uses: actions/checkout@v5

    - name: Use Deno
      uses: denoland/setup-deno@v2
      with:
        deno-version: v2.4

    - name: Cache Deno
      uses: actions/cache@v4
      with:
        path: ~/.cache/deno
        key: deno-https/v2-${{ github.sha }}
        restore-keys: deno-https/v2-

    - name: Check src/main.ts
      if: always()
      run: time deno check src/main.ts

    - name: Run test suite
      if: always()
      run: time deno test

  push:
    needs: check
    runs-on: ubuntu-latest
    name: 'Push container image'
    if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    steps:
      - name: Use Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.4
      - name: Cache Deno
        uses: actions/cache@v4
        with:
          path: ~/.cache/deno
          key: deno-https/v2-${{ github.sha }}-doci
          restore-keys: deno-https/v2-

      - name: Determine image name
        id: name
        run: |
          if [[ "${{ github.ref }}" == "refs/tags/"* ]]
          then VERSION=$( echo $VERSION | sed -e 's/^v//' )
          else VERSION=$( echo ${{ github.sha }} | cut -c1-7 )
          fi
          echo "Will push tag $VERSION"
          echo "::set-output name=tag::$VERSION"

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: x-access-token
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v5

      - name: Build denodir
        run: deno task doci pipeline build
      - name: Push alpine image
        run: deno task doci pipeline push --tag ${{ steps.name.outputs.tag }} --target alpine
      - name: Push debian image
        run: deno task doci pipeline push --tag ${{ steps.name.outputs.tag }} --target debian

  check-chart:
    runs-on: ubuntu-latest
    name: Check Helm chart

    steps:
    - name: Checkout source
      uses: actions/checkout@v5

    - name: Install Helm
      uses: azure/setup-helm@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Evaluate Chart
      run: time helm template helm-chart

  push-chart:
    needs:
    - push
    - check-chart
    runs-on: ubuntu-latest
    name: 'Push Helm chart'
    if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Determine image tag
        id: name
        run: |
          if [[ "${{ github.ref }}" == "refs/tags/"* ]]
          then VERSION=$( echo $VERSION | sed -e 's/^v//' )
          else VERSION=$( echo ${{ github.sha }} | cut -c1-7 )
          fi
          echo "Will push tag $VERSION"
          echo "tag=$VERSION" >> $GITHUB_OUTPUT

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        run: echo "${GITHUB_TOKEN}" | helm registry login ghcr.io --username ${GITHUB_ACTOR} --password-stdin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Package chart
        working-directory: helm-chart
        run: helm package . -u -d dist --app-version "${{ steps.name.outputs.tag }}"

      - name: Push chart
        working-directory: helm-chart
        run: helm push dist/*.tgz oci://ghcr.io/cloudydeno/charts
